// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(AutomotrizContext))]
    partial class AutomotrizContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoPersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CedulaPersona")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EmailPersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelefonoPersona")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Core.Entities.DetalleAprobacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdOrdenAprobacionFK")
                        .HasColumnType("int");

                    b.Property<string>("Repuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdOrdenAprobacionFK");

                    b.ToTable("detalle_aprobacion", (string)null);
                });

            modelBuilder.Entity("Core.Entities.DetalleFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaFK")
                        .HasColumnType("int");

                    b.Property<string>("Repuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdFacturaFK");

                    b.ToTable("detalle_factura", (string)null);
                });

            modelBuilder.Entity("Core.Entities.DiagnosticoEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdEmpleadoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenServicioFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleadoFK");

                    b.HasIndex("IdOrdenServicioFK");

                    b.ToTable("diagnostico_empleado", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoPersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CedulaPersona")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmailPersona")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdEspecialidadFk")
                        .HasColumnType("int");

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelefonoPersona")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecialidadFk");

                    b.ToTable("empleado", (string)null);
                });

            modelBuilder.Entity("Core.Entities.EmpleadoOrdenServicio", b =>
                {
                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenServicioFk")
                        .HasColumnType("int");

                    b.HasKey("IdEmpleadoFk", "IdOrdenServicioFk");

                    b.HasIndex("IdOrdenServicioFk");

                    b.ToTable("empleado_orden_servicio", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("especialidad", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenServicioFK")
                        .HasColumnType("int");

                    b.Property<double>("Iva")
                        .HasColumnType("double");

                    b.Property<double>("Subtotal")
                        .HasColumnType("double");

                    b.Property<double>("ValorManoObra")
                        .HasColumnType("double");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.HasIndex("IdOrdenServicioFK")
                        .IsUnique();

                    b.ToTable("facturas", (string)null);
                });

            modelBuilder.Entity("Core.Entities.OrdenAprobacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaOrdenAprobacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEmpleadoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenServicioFK")
                        .HasColumnType("int");

                    b.Property<string>("NroOrdenAprobacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleadoFK");

                    b.HasIndex("IdOrdenServicioFK");

                    b.ToTable("orden_aprobacion", (string)null);
                });

            modelBuilder.Entity("Core.Entities.OrdenServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DiagnosticoCliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculoFK")
                        .HasColumnType("int");

                    b.Property<int>("NroOrden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.HasIndex("IdVehiculoFK");

                    b.ToTable("orden_servicio", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ColorVehiculo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<string>("KilometrajeVehiculo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MarcaVehiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModeloVehiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlacaVehiculo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFk");

                    b.ToTable("vehiculo", (string)null);
                });

            modelBuilder.Entity("EmpleadoOrdenServicio", b =>
                {
                    b.Property<int>("EmpleadosId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenesServicioId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadosId", "OrdenesServicioId");

                    b.HasIndex("OrdenesServicioId");

                    b.ToTable("EmpleadoOrdenServicio");
                });

            modelBuilder.Entity("Core.Entities.DetalleAprobacion", b =>
                {
                    b.HasOne("Core.Entities.OrdenAprobacion", "OrdenAprobacion")
                        .WithMany("DetallesAprobacion")
                        .HasForeignKey("IdOrdenAprobacionFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenAprobacion");
                });

            modelBuilder.Entity("Core.Entities.DetalleFactura", b =>
                {
                    b.HasOne("Core.Entities.Factura", "Factura")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("IdFacturaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("Core.Entities.DiagnosticoEmpleado", b =>
                {
                    b.HasOne("Core.Entities.Empleado", "Empleado")
                        .WithMany("DiagnosticosEmpleado")
                        .HasForeignKey("IdEmpleadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.OrdenServicio", "OrdenServicio")
                        .WithMany("DiagnosticosEmpleados")
                        .HasForeignKey("IdOrdenServicioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("OrdenServicio");
                });

            modelBuilder.Entity("Core.Entities.Empleado", b =>
                {
                    b.HasOne("Core.Entities.Especialidad", "Especialidad")
                        .WithMany("Empleados")
                        .HasForeignKey("IdEspecialidadFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("Core.Entities.EmpleadoOrdenServicio", b =>
                {
                    b.HasOne("Core.Entities.Empleado", "Empleado")
                        .WithMany("EmpleadosOrdenesServicio")
                        .HasForeignKey("IdEmpleadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.OrdenServicio", "OrdenServicio")
                        .WithMany("EmpleadosOrdenesServicio")
                        .HasForeignKey("IdOrdenServicioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("OrdenServicio");
                });

            modelBuilder.Entity("Core.Entities.Factura", b =>
                {
                    b.HasOne("Core.Entities.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.OrdenServicio", "OrdenServicio")
                        .WithOne("Factura")
                        .HasForeignKey("Core.Entities.Factura", "IdOrdenServicioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("OrdenServicio");
                });

            modelBuilder.Entity("Core.Entities.OrdenAprobacion", b =>
                {
                    b.HasOne("Core.Entities.Empleado", "Empleado")
                        .WithMany("OrdenesAprobacion")
                        .HasForeignKey("IdEmpleadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.OrdenServicio", "OrdenServicio")
                        .WithMany("OrdenesAprobacion")
                        .HasForeignKey("IdOrdenServicioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("OrdenServicio");
                });

            modelBuilder.Entity("Core.Entities.OrdenServicio", b =>
                {
                    b.HasOne("Core.Entities.Cliente", "Cliente")
                        .WithMany("OrdenesServicios")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Vehiculo", "Vehiculo")
                        .WithMany("OrdenesServicio")
                        .HasForeignKey("IdVehiculoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Core.Entities.Vehiculo", b =>
                {
                    b.HasOne("Core.Entities.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdClienteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EmpleadoOrdenServicio", b =>
                {
                    b.HasOne("Core.Entities.Empleado", null)
                        .WithMany()
                        .HasForeignKey("EmpleadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.OrdenServicio", null)
                        .WithMany()
                        .HasForeignKey("OrdenesServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Cliente", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("OrdenesServicios");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Core.Entities.Empleado", b =>
                {
                    b.Navigation("DiagnosticosEmpleado");

                    b.Navigation("EmpleadosOrdenesServicio");

                    b.Navigation("OrdenesAprobacion");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Core.Entities.Factura", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("Core.Entities.OrdenAprobacion", b =>
                {
                    b.Navigation("DetallesAprobacion");
                });

            modelBuilder.Entity("Core.Entities.OrdenServicio", b =>
                {
                    b.Navigation("DiagnosticosEmpleados");

                    b.Navigation("EmpleadosOrdenesServicio");

                    b.Navigation("Factura");

                    b.Navigation("OrdenesAprobacion");
                });

            modelBuilder.Entity("Core.Entities.Vehiculo", b =>
                {
                    b.Navigation("OrdenesServicio");
                });
#pragma warning restore 612, 618
        }
    }
}
